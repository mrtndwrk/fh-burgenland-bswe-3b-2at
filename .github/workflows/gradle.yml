# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle - for SWM 2AT

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  run_unittests:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a
      with: 
        gradle-version: '8.6'

    - name: Run Unit Tests
      run: ./gradlew test

  lint:
    runs-on: ubuntu-latest
    needs: run_unittests
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a
      with: 
        gradle-version: '8.6'

    - name: Run Checkstyle
      run: ./gradlew checkstyleMain checkstyleTest

  hadolint:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install hadolint
      run: |
        wget -O hadolint "https://github.com/hadolint/hadolint/releases/download/v2.7.0/hadolint-Linux-x86_64" && \
        chmod +x hadolint && \
        sudo mv hadolint /usr/local/bin/hadolint

    - name: Run hadolint
      run: hadolint Dockerfile

  build:
    runs-on: ubuntu-latest
    needs: hadolint
    permissions:
      contents: read
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a
      with: 
        gradle-version: '8.6'

    - name: Build with Gradle
      run: ./gradlew bootJar

  build_docker_image:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a
      with: 
        gradle-version: '8.6'

    - name: Build with Gradle
      run: ./gradlew bootJar

    - name: Build Docker image
      run: docker build -t ${{ github.repository }}:latest .
      working-directory: ${{ github.workspace }}

    - name: Log into GitHub Container Registry
      run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Tag Docker image
      run: docker tag ${{ github.repository }}:latest ghcr.io/${{ github.repository }}

    - name: Push Docker image to GHCR
      run: docker push ghcr.io/${{ github.repository }}






#     # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
#     # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md

#     - name: Setup Gradle
#       uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a
#       with: 
#         gradle-version: '8.6'

#     - name: Run checkstyle
#       run: ./gradlew checkstyleMain checkstyleTest

#     - name: Build with Gradle Wrapper
#       run: ./gradlew build


#     - name: Build with Gradle
#       run: ./gradlew build

        
#     # - name: Set JAVA_HOME for Gradle
#     #   run: echo "org.gradle.java.home=C:\Program Files\Java\jdk-21" >> $GITHUB_ENV
        
#     # - name: Build with Gradle
#     #   run: gradle build



# >>>>>>> main
    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  # dependency-submission:

  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'

  #   # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
  #   # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
  #   - name: Generate and submit dependency graph
  #     uses: gradle/actions/dependency-submission@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
